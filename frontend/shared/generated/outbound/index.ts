// Code generated by tygo. DO NOT EDIT.

//////////
// source: crew_information.go

/**
 * bad name, it's colliding with the person type in inbound, outta pull these types up probably or something
 */
export interface OutboundPerson {
  first_name: string;
  last_name: string;
  nick_name: string;
  age: number /* int */;
  morale: number /* float64 */;
}
export interface EmploymentContract {
  title: string;
  start_date: number /* uint */;
  end_date: number /* uint */;
}
export interface CrewMember {
  person: OutboundPerson;
  contract: EmploymentContract;
}
export interface CrewInformationReq {
  size: number /* int */;
  wage: number /* float64 */;
  rations: number /* float64 */;
  morale: number /* float64 */;
  minimumSafeManning: number /* uint */;
  maximumSafeManning: number /* uint */;
  crew_members: CrewMember[];
}
export interface CrewInformationResp {
}

//////////
// source: outbound.go

export interface Outbound {
  ShipMoved: {
    req: ShipMovedReq;
    resp: ShipMovedResp;
  };
  ShipDocked: {
    req: ShipDockedReq;
    resp: ShipDockedResp;
  };
  TimeChanged: {
    req: TimeChangedReq;
    resp: TimeChangedResp;
  };
  ShipInventoryChanged: {
    req: ShipInventoryChangedReq;
    resp: ShipInventoryChangedResp;
  };
  CrewInformation: {
    req: CrewInformationReq;
    resp: CrewInformationResp;
  };
  ShipChanged: {
    req: ShipChangedReq;
    resp: ShipChangedResp;
  };
}
export interface Sender {
}

//////////
// source: ship_changed.go

export interface ShipSummary {
  id: number /* uint */;
  isCapital: boolean;
  name: string;
}
export interface ShipChangedReq {
  id: number /* uint */;
  x: number /* float64 */;
  y: number /* float64 */;
  isDocked: boolean;
  stateOfRepair: number /* float64 */;
  estimatedSailingSpeed: number /* float64 */;
  minimumSafeManning: number /* uint */;
  maximumSafeManning: number /* uint */;
  recommendedMaxCargoWeightCapacity: number /* uint */;
  maxCargoSpaceCapacity: number /* uint */;
  currentCargoWeight: number /* float32 */;
  currentCargoSpace: number /* float32 */;
  fleet: ShipSummary[];
}
export interface ShipChangedResp {
}

//////////
// source: ship_docked.go

export interface ShipDockedReq {
  ship_id?: number /* uint */;
  location?: any /* coordination.Point */;
  undocked?: boolean;
  port?: Port;
}
export interface Port {
  id?: number /* uint */;
  inventory?: Inventory;
  item_valuation?: { [key: string]: number /* float64 */};
}
export interface Inventory {
  id?: number /* uint */;
  items?: Item[];
}
export interface ShipDockedResp {
}

//////////
// source: ship_inventory_changed.go

export interface Item {
  id: number /* uint */;
  name: string;
  amount: number /* float32 */;
}
export interface ShipInventoryChangedReq {
  ship_id: number /* uint */;
  inventory: Inventory;
}
export interface ShipInventoryChangedResp {
}

//////////
// source: ship_moved.go

export interface RouteInfo {
  total_tiles_moved: number /* int */;
  tiles_in_route: number /* int */;
  reached_destination: boolean;
  estimated_time_left: any /* timeline.Tick */; // in days
  trajectory: any /* coordination.Point */[];
  is_paused: boolean;
  is_cancelled: boolean;
  headed_to_port: boolean;
}
export interface ShipMovedReq {
  ship_id: number /* uint */;
  location: any /* coordination.Point */;
  route_info: RouteInfo;
}
export interface ShipMovedResp {
}

//////////
// source: time_changed.go

export interface TimeChangedReq {
  current_tick: any /* timeline.Tick */;
  ticks_per_second: any /* timeline.Tick */;
  current_day: any /* timeline.Tick */;
  current_year: any /* timeline.Tick */;
  is_paused: boolean;
}
export interface TimeChangedResp {
}
