// Code generated by tygo. DO NOT EDIT.

//////////
// source: control_time.go

export interface ControlTimeReq {
  set_ticks_per_second_to?: number /* uint64 */;
  set_ticks_per_second_by?: number /* uint64 */;
}
export interface ControlTimeResp {
}

//////////
// source: get_ports.go

export interface GetPortsReq {
}
export interface Port {
  id: number /* uint */;
  point: any /* models.Point */;
}
export interface GetPortsResp {
  ports: Port[];
}

//////////
// source: get_world_map.go

export interface GetWorldMapReq {
}
export interface Point {
  x: number /* int */;
  y: number /* int */;
  coastal: boolean;
  elevation: number /* float64 */;
}
export interface Continent {
  points: Point[];
  center: any /* coordination.Point */;
}
export interface GetWorldMapResp {
  continents: (Continent | undefined)[];
}

//////////
// source: hire_crew.go

export interface HireCrewReq {
  size: number /* int */;
}
export interface HireCrewResp {
}

//////////
// source: inbound.go

export interface Inbound {
  MoveShip: {
    req: MoveShipReq;
    resp: MoveShipResp;
  };
  Login: {
    req: LoginReq;
    resp: LoginResp;
  };
  Register: {
    req: RegisterReq;
    resp: RegisterResp;
  };
  GetWorldMap: {
    req: GetWorldMapReq;
    resp: GetWorldMapResp;
  };
  GetPorts: {
    req: GetPortsReq;
    resp: GetPortsResp;
  };
  ControlTime: {
    req: ControlTimeReq;
    resp: ControlTimeResp;
  };
  Trade: {
    req: TradeReq;
    resp: TradeResp;
  };
  PlotRoute: {
    req: PlotRouteReq;
    resp: PlotRouteResp;
  };
  HireCrew: {
    req: HireCrewReq;
    resp: HireCrewResp;
  };
  RepairShip: {
    req: RepairShipReq;
    resp: RepairShipResp;
  };
  ManageRoute: {
    req: ManageRouteReq;
    resp: ManageRouteResp;
  };
}
export type InboundFunc = any;
export type Connection = any;

//////////
// source: login.go

export interface LoginReq {
  snapshot: any /* game_context.Snapshot */;
}
export interface ShipInfo {
  x: number /* float64 */;
  y: number /* float64 */;
  id: number /* uint */;
}
export interface LoginResp {
  ship: ShipInfo;
  success: boolean;
}

//////////
// source: manage_route.go

export type MangeRouteAction = string;
export const ManageRouteActionStart: MangeRouteAction = "start";
export const ManageRouteActionPause: MangeRouteAction = "pause";
export const ManageRouteActionStop: MangeRouteAction = "cancel";
export interface ManageRouteReq {
  ship_id: number /* uint */;
  action: MangeRouteAction; // start, pause, cancel
}
export interface ManageRouteResp {
}

//////////
// source: move_ship.go

export interface MoveShipReq {
  x: number /* float64 */;
  y: number /* float64 */;
}
export interface MoveShipResp {
  success: boolean;
}

//////////
// source: plot_route.go

export interface Coordinate {
  x: number /* float64 */;
  y: number /* float64 */;
}
export interface PlotRouteReq {
  coordinate: Coordinate;
}
export interface PlotRouteResp {
  coordinates: Coordinate[];
  speed: number /* float64 */;
  duration: number /* float64 */; // in days
}

//////////
// source: register.go

export interface RegisterReq {
}
export interface RegisterResp {
  snapshot: any /* game_context.Snapshot */;
}

//////////
// source: repair_ship.go

export interface RepairShipReq {
  ship_id: number /* uint */;
}
export interface RepairShipResp {
}

//////////
// source: trade.go

export interface Item {
  name: string;
  amount: number /* float32 */;
}
export interface TradeAction {
  item: Item;
  from: number /* uint */;
  to: number /* uint */;
}
export interface TradeReq {
  actions: TradeAction[];
}
export interface TradeResp {
}
