// Code generated by tygo. DO NOT EDIT.

//////////
// source: control_time.go

export interface ControlTimeReq {
  set_ticks_per_second_to?: number /* uint64 */;
  set_ticks_per_second_by?: number /* uint64 */;
}
export interface ControlTimeResp {
}

//////////
// source: get_ports.go

export interface GetPortsReq {
}
export interface Port {
  id: number /* uint */;
  point: CoastalPoint;
}
export interface GetPortsResp {
  ports: Port[];
}

//////////
// source: get_world_map.go

export interface GetWorldMapReq {
}
export interface CoastalPoint {
  x: number /* int */;
  y: number /* int */;
}
export interface Continent {
  coastal_points: CoastalPoint[];
  center: any /* world_map.Point */;
}
export interface GetWorldMapResp {
  continents: (Continent | undefined)[];
}

//////////
// source: inbound.go

export interface Inbound {
  MoveShip: {
    req: MoveShipReq;
    resp: MoveShipResp;
  };
  Login: {
    req: LoginReq;
    resp: LoginResp;
  };
  Register: {
    req: RegisterReq;
    resp: RegisterResp;
  };
  GetWorldMap: {
    req: GetWorldMapReq;
    resp: GetWorldMapResp;
  };
  GetPorts: {
    req: GetPortsReq;
    resp: GetPortsResp;
  };
  ControlTime: {
    req: ControlTimeReq;
    resp: ControlTimeResp;
  };
}
export type InboundFunc = any;

//////////
// source: login.go

export interface LoginReq {
  snapshot: any /* game_context.Snapshot */;
}
export interface ShipInfo {
  x: number /* float64 */;
  y: number /* float64 */;
  id: number /* uint */;
}
export interface LoginResp {
  ship: ShipInfo;
  success: boolean;
}

//////////
// source: move_ship.go

export interface MoveShipReq {
  x: number /* float64 */;
  y: number /* float64 */;
}
export interface MoveShipResp {
  success: boolean;
}
export interface RouteShip {
}

//////////
// source: register.go

export interface RegisterReq {
}
export interface RegisterResp {
  snapshot: any /* game_context.Snapshot */;
}
